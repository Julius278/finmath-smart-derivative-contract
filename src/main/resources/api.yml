openapi: "3.0.3"

info:
  version: 1.0.0
  title: SDC Service API
  license:
    name: Apache License 2.0

servers:
  - url: http://34.159.3.234:8080/

paths:
  /valuation/value:
    post:
      summary: Request mapping for the value
      operationId: value
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValueRequest"
      responses:
        "200":
          description: Value was calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResult"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /valuation/margin:
    post:
      summary: Request mapping for the margin
      operationId: margin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarginRequest"
      responses:
        "200":
          description: Margin was calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarginResult"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /valuation/test/product:
    post:
      summary: Request mapping for the value of a product (using fixed market data)
      operationId: testProductValue
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - tradeData
              properties:
                tradeData:
                  type: string
                  format: binary
      responses:
        "200":
          description: Value was calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResult"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /info/git:
    get:
      summary: Request info on Git version and tags
      operationId: info-git
      responses:
        "200":
          description: Info returned
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /info/finmath:
    get:
      summary: Request info on finmath-lib version and tags
      operationId: info-finmath
      responses:
        "200":
          description: Info returned
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /plain-swap-editor/generate-xml:
    post:
      tags:
        - plainSwapEditor
      summary: Request mapping for generation of the trade data SDCmL
      operationId: generate-plain-swap-sdcml
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlainSwapOperationRequest"
      responses:
        "200":
          description: SDCmL was generated
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /plain-swap-editor/evaluate-from-editor:
    post:
      tags:
        - plainSwapEditor
      summary: Request mapping for valuation of the trade data coming from the editor.
      operationId: evaluate-from-plain-swap-editor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlainSwapOperationRequest"
      responses:
        "200":
          description: Valuation successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResult"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /plain-swap-editor/get-fixed-schedule:
    post:
      tags:
        - plainSwapEditor
      summary: Request payment schedule for the fixed leg defined in the editor.
      operationId: get-fixed-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlainSwapOperationRequest"
      responses:
        "200":
          description: Schedule generation successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CashflowPeriod"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /plain-swap-editor/get-floating-schedule:
    post:
      tags:
        - plainSwapEditor
      summary: Request payment schedule for the floating leg defined in the editor.
      operationId: get-floating-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlainSwapOperationRequest"
      responses:
        "200":
          description: Schedule generation successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CashflowPeriod"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /plain-swap-editor/get-par-rate:
    post:
      tags:
        - plainSwapEditor
      summary: Request the par rate for the swap defined in the editor.
      operationId: get-par-rate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlainSwapOperationRequest"
      responses:
        "200":
          description: Schedule generation successful.
          content:
            application/json:
              schema:
                type: number
                format: double
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /plain-swap-editor/get-saved-contracts:
    get:
      tags:
        - plainSwapEditor
      summary: Request the list of saved contracts.
      operationId: get-saved-contracts
      responses:
        "200":
          description: Fetch successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                items:
                  type: string
  /plain-swap-editor/load-contract:
    post:
      tags:
        - plainSwapEditor
      summary: Request a saved contract.
      operationId: load-contract
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Fetch successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlainSwapOperationRequest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /plain-swap-editor/save-contract:
    post:
      tags:
        - plainSwapEditor
      summary: Request to save a contract.
      operationId: save-contract
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plainSwapOperationRequest:
                  $ref: "#/components/schemas/PlainSwapOperationRequest"
                name:
                  type: string
      responses:
        "200":
          description: Save successful.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /plain-swap-editor/upload-market-data:
    post:
      tags:
        - plainSwapEditor
      summary: Request to upload market data
      operationId: upload-market-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - tradeData
              properties:
                tradeData:
                  type: string
                  format: binary
      responses:
        "200":
          description: Upload successful.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    ValueResult:
      $ref: "schemas/openapi-schemas/ValueResult.yml"
    MarginResult:
      $ref: "schemas/openapi-schemas/MarginResult.yml"
    Error:
      $ref: "schemas/openapi-schemas/Error.yml"
    PlainSwapOperationResponse:
      $ref: "schemas/openapi-schemas/PlainSwapOperationResponse.yml"
    ValueRequest:
      $ref: "schemas/openapi-schemas/ValueRequest.yml"
    MarginRequest:
      $ref: "schemas/openapi-schemas/MarginRequest.yml"
    PlainSwapOperationRequest:
      $ref: "schemas/openapi-schemas/PlainSwapOperationRequest.yml"
    CashflowPeriod:
      $ref: "schemas/openapi-schemas/CashflowPeriod.yml"
    JsonMarketDataItem:
      $ref: "schemas/openapi-schemas/JsonMarketDataItem.yml"
